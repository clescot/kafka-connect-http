name: build
on:
  push:
    branches-ignore:
      - master
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.1.7
      - name: Set up JDK 17
        uses: actions/setup-java@v4.3.0
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
          gpg-private-key: "${{ secrets.GPG_KEY }}"
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: Cache local Maven repository
        uses: actions/cache@v4.0.2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots -Pcoverage clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=clescot -Dsonar.projectKey=clescot_kafka-connect-http
        env:
          MAVEN_GPG_PASSPHRASE: "${{ secrets.GPG_PASSPHRASE }}"
          SIGN_KEY: "${{ secrets.GPG_KEY }}"
          SIGN_KEY_ID: "${{ secrets.GPG_KEY_ID }}"
          SIGN_KEY_PASS: "${{ secrets.GPG_PASSPHRASE }}"
          SONAR_TOKEN: "${{ secrets.SONAR_TOKEN }}"
      - run: mkdir staging && cp kafka-connect-http-core/target/*.jar staging && cp -r kafka-connect-http-connectors/target/components/packages/clescot-kafka-connect-http-connectors-*.zip staging
      - uses: actions/upload-artifact@v4.4.0
        with:
          name: Package
          path: staging

