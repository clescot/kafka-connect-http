version: "3.3"
services:

  sink-ws-connector:
    image: "http-kafka-connect-sink:latest"
    hostname: "sink-ws"
    ports:
    - "8083:8083"
    environment:
      KAFKA_HEAP_OPTS:  "-Xmx1G -Xms1G"

      CONNECT_BOOTSTRAP_SERVERS: "${KAFKA_BOOTSTRAP_SERVERS}"

      CONNECT_REST_ADVERTISED_HOST_NAME: "${DOCKER_HOST_ADDRESS}"
      CONNECT_REST_PORT: "8083"

      CONNECT_GROUP_ID: "http-sink"
      CONNECT_CLIENT_ID: "http-sink"

#      CONNECT_CONFIG_STORAGE_TOPIC: "http-sink_config"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_CONFIG_STORAGE_PARTITIONS: "1"

#      CONNECT_STATUS_STORAGE_TOPIC: "http-sink_status"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_PARTITIONS: "1"

#      CONNECT_OFFSET_STORAGE_TOPIC: "http-sink_offset"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_PARTITIONS: "1"

#      CONNECT_KEY_CONVERTER: "io.confluent.connect.avro.AvroConverter"
#      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "${SCHEMA_REGISTRY_URL}"
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLED: "false"

#      CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "${SCHEMA_REGISTRY_URL}"

      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"

      CONNECT_PRODUCER_ACKS: "1"
      CONNECT_PRODUCER_COMPRESSION_TYPE: "gzip"

      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_KAFKA_CONNECT_LEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "com.github.clescot=DEBUG,org.apache.kafka=INFO,org.reflections=ERROR"

      CONNECT_ZOOKEEPER_CONNECT: "${ZOOKEEPER_HOSTS}"
      CONNECT_PLUGIN_PATH: "/etc/kafka-connect/jars"
      CONNECT_INTERCEPTOR_CLASSES: ""
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: ""
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: ""

networks:
  net:
    driver: overlay
  kafka_net:
    external: true